package com.bootcamp.homecontroller;

import java.io.IOException;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import javax.swing.JOptionPane;

import com.bootcamp.client.dao.ClientDao;
//import com.bootcamp.client.command.BCBookingConfirmationCommand;
//import com.bootcamp.client.command.BCCampDateCheckCommand;
import com.bootcamp.command.*;
import com.bootcamp.host.dao.HInfoDao;

/**
 * Servlet implementation class BFrontController
 */
@WebServlet("*.do")
public class BCFrontController extends HttpServlet {
	private static final long serialVersionUID = 1L;

	/**
	 * @see HttpServlet#HttpServlet()
	 */
	public BCFrontController() {
		super();
		// TODO Auto-generated constructor stub
	}

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse
	 *      response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		// TODO Auto-generated method stub
		actionDo(request, response);
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse
	 *      response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		// TODO Auto-generated method stub
		actionDo(request, response);

	}

	private void actionDo(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		request.setCharacterEncoding("utf-8");

		String viewPage = null;
		BCCommand command = null;

		String uri = request.getRequestURI();
		String conPath = request.getContextPath();
		String com = uri.substring(conPath.length());

		switch (com) {

		// SangHyuk
		// ListMain.do 코드 확인 시 타이핑을 줄이기 위해서 main.do로 수정함.
		case ("/main.do"):
			System.out.println("List Main");
			command = new ListMain_Command();
			command.execute(request, response);
			viewPage = "Home.jsp";
			break;
		// searchCamp.do 코드 확인 시 캠핑장을 검색어나 타입에 따라 검색하기 위한 메소.
		case ("/searchCamp.do"):
			command = new SearchCamp_Command();
			command.execute(request, response);
			// Test를 위해 Home2.jsp로 출력하게 함.
			viewPage = "Home.jsp";
			break;

		// 예약 페이지 예약 가능한 날짜 확인을 위한 날짜 체크 sanghyuk
		case ("/booking.do"):
			System.out.println("List camp for Booking");
			command = new BCCampListCommand();
			command.execute(request, response);
			viewPage = "Calendar2.jsp";
			System.out.println("List camp End");
			break;
		// 예약 가능한 방 리스트 보여주기 sanghyuk
//		case ("/bookingdatechek.do"):
//			System.out.println("Date Check for Booking");
//			command = new BCCampDateCheckCommand();
//			command.execute(request, response);
//			viewPage = "Calendar3.jsp";
//			System.out.println("Date Check for Booking End");
//			break;

		// 로그인
		// 22-11-10 주현씨 수정함
		case ("/login.do"):
			command = new Clientlogin_Command();
			command.execute1(request, response);
			String cId = request.getParameter("cId");
			String cPw = request.getParameter("cPw");

			ClientDao dao = new ClientDao();
			Boolean result = dao.login(cId, cPw);

			if (result == false) {
				JOptionPane.showInternalMessageDialog(null, "아이디와 비밀번호를 확인해주세요 ", "로그인", 0, null);
				viewPage = "ClientLoginView.jsp";
			} else {
				JOptionPane.showInternalMessageDialog(null, "환영합니다 ", "로그인", 0, null);
				// page = "ClientMainView.jsp";
				viewPage = "main.do";
			}
			break;

		// 회원등록
		case ("/Clientwrite.do"):
			command = new Clientwrite_Command();
			command.execute(request, response);
			viewPage = "ClientLoginView.jsp";
			break;
		// 마이페이지
		case ("/mypageView.do"):
			command = new ClientmypageView_Command();
			command.execute(request, response);
			viewPage = "ClientMypageView.jsp";
			break;
		// 수정하기
		case ("/ClientModify.do"):
			command = new Clientmodify_Command();
			command.execute(request, response);
			viewPage = "/ClientMainView.jsp";
			break;
		// 삭제하기
		case ("/ClientDelete.do"):
			command = new Clientdelete_Command();
			command.execute(request, response);
			viewPage = "/ClientLoginView.jsp";
			break;

		// Hosik ----------------------------------------------------------------
		// 상세 페이지 보기
		case ("/detailView.do"):
			command = new BCDetailCommand();
			command.execute(request, response);
			viewPage = "DetailView.jsp";
			break;
		// 예약. 예약할 인원수 정하고 예약 확정짓기
//		case ("/confirmation.do"):
//			command = new BCBookingConfirmationCommand();
//			command.execute(request, response);
//			viewPage = "Booking.jsp";
//			break;

		// --- HyunSuk ----------------------------------------------------------------
//		case ("/Review_List.do"):
//			   command = new Review_List_Command();
//			   command.execute(request, response);
//			   viewPage = "Review_List.jsp";
//			   break;

		// ===========================host랑
		// 합체======================================================

		// --------------------주현: 호스트모드 넘어갈 때 host 가입 여부 확인--------------------

		case ("/check.do"):

			command = new ClientToHostCommand();
			command.execute1(request, response);
			String cId1 = request.getParameter("cId");
			
			HInfoDao dao1 = new HInfoDao();
			Boolean check1 = dao.arHost(cId1);

			if (check1 == true) {
				viewPage = "/host_main.do";
			} else {
				viewPage = "/term.do";
			}
			break;
			
			
			
		// 약관보여주기
		case ("/term.do"):
			viewPage = "HostTerms.jsp";
			break;

		// 약관 동의/비동의
		case ("/termsAD.do"):
			command = new HostTermsADCommand();
			Boolean check = command.execute1(request, response);

			if (check == true) {
				viewPage = "TermsAgree.jsp";

			} else {
				// 나중에 클라이언트랑 연결되면 client 메인페이지로 이동
				viewPage = "list.jsp";

			}

			break;

		// 마이페이지 내정보 불러오기
		case ("/myPage.do"):
			command = new HmyInfoCommand();
			command.execute(request, response);
			viewPage = "HostmyPage.jsp";
			break;
		// 마이페이지 내정보 수정
		case ("/modify.do"):
			command = new HmyInfoModifyCommand();
			command.execute(request, response);
			command = new HmyInfoCommand();
			command.execute(request, response);
			viewPage = "HostmyPage.jsp";
			break;

		// --------------------주현: 약관동의 후 호스트 가입(호스트 정보 insert)--------------------

		case ("/show.do"):
			command = new HInfoCommand();
			command.execute(request, response);
			viewPage = "hostJoin.jsp";
			break;

		// 호스트에 인서트
		case ("/insert.do"):
			command = new HInfoInsertCommand();
			command.execute(request, response);
			viewPage = "uploadImage.jsp";
			break;
		// 호스트 이미지 넣기
		case ("/fileUp.do"):
			command = new HImageCommand();
			command.execute(request, response);
			viewPage = "fileShow.jsp";
			break;

		// ---------------------상준 : 캠핑장 등록 -----------------------------------

		case ("/regcamp.do"):
			System.out.println("Controller regcamp.do");
			command = new RegCampCommand();
			command.execute(request, response);
			// 자리 지정 페이지로 가야되지만 아직 완성물이 없어서 우선 메인페이지로 이동
			viewPage = "HostMain.jsp";
			break;

		// ---------------------영진: 메인페이지 -----------------------------------

		case ("/host_main.do"): // 로그인 화면에서 => host_main.do?hSeq= 로 이동할 예정임
			command = new HostCampProfileList_Command(); // 호스트 소유 모든 캠핑장의 이름, 사진, 주소 (썸네일용)
			command.execute(request, response);
			command = new HostMonthlyProfit_Command(); // 월별 총수익 차트에 표시 (올해분)
			command.execute(request, response);
			command = new HostMonthlyReservation_Command(); // 월별 총예약건수 차트에 표시 (올해분)
			command.execute(request, response);
			command = new HostMainReservationStatus_Command(); // 오늘의 신규 예약건수, 올해 체크인/체크아웃 예정건수
			command.execute(request, response);
			viewPage = "HostMain.jsp";
			break;

		case ("/host_review_list.do"):
			command = new HostReviewList_Command(); // 호스트 소유 캠핑장에 달린 리뷰의 리스트
			command.execute(request, response);

			command = new HostCampNameList_Command(); // 호스트 소유 캠핑장 이름 리스트 (검색을 위한 콤보박스용)
			command.execute(request, response);

			viewPage = "HostReviewList.jsp";
			break;

		case ("/host_review_content_view.do"):
			command = new HostReviewContentView_Command(); // 리뷰 정보 (작성자, 제목, 내용 등등) 받아오기
			command.execute(request, response);
			viewPage = "HostReviewContentView.jsp";
			break;

		case ("/send_review_reply.do"):
			command = new HostSendReviewReply_Command(); // 호스트가 후기에 작성한 답글 insert하고 댓글 그룹 업데이트
			command.execute(request, response);
			viewPage = "/host_review_list.do";
			break;

		// --------------------------호스트 마이페이지에 정보 불러오기--------------------------

		// --------------------------주현 : 고객문의 리스트 페이지--------------------------
		case ("/askList.do"):
			command = new askListCommand();
			command.execute(request, response);
			viewPage = "askList.jsp";
			break;
		case ("/askDetail.do"):
			command = new askDetailCommand();
			command.execute(request, response);
			viewPage = "AskDetail.jsp";
			break;
		case ("/aComment.do"):
			command = new AskCommentCommand();
			command.execute(request, response);
			viewPage = "AskDetail.jsp";
			break;

		// ------------예진 : 예약 리스트 페이지 열기 ------------------------------------
		case ("/bookList.do"):
			command = new HostBookListCommand();
			command.execute(request, response);
			viewPage = "HostTotalBookManage.jsp";
			break;

		// 예약 리스트 테이블에서 row 클릭시 디테일 페이지
		case ("/YJHostBookDetail.do"):
			command = new MyHostBookDetailCommand();
			command.execute(request, response);
			viewPage = "YJHostBookDetail.jsp";
			break;

		// 예약 리스트 페이지에서 검색
		case ("/bookSearch.do"):
			command = new HostBookSearchCommand();
			command.execute(request, response);
			viewPage = "HostTotalBookManage.jsp";
			break;

		// 정보 수정 메인페이지 열기
		case ("/HostRInfo.do"):
			viewPage = "HostInfoMMain.jsp";
			break;

		// ------------예진 : 캠핑장 정보수정 페이지 ------------------------------------
		// 정보 수정 메인페이지에서 위치, 설명 수정 페이지로
		case ("/HostInfoMLoView.do"):
			command = new HostInfoLSelectCommand();
			command.execute(request, response);
			viewPage = "HostInfoMLo.jsp";
			break;

		// 위치, 설명 수정
		case ("/HostInfoMLo.do"):
			command = new HostInfoLMoCommand();
			command.execute(request, response);
			viewPage = "HostInfoMMain.jsp";
			break;

		// 정보 수정 메인페이지에서 이름, 카테고리, 전화번호 수정 페이지로
		case ("/HostInfoMNCTView.do"):
			command = new HostInfoNCTSelectCommand();
			command.execute(request, response);
			viewPage = "HostInfoMNameCategoryTel.jsp";
			break;

		// 이름, 카테고리, 전화번호 수정
		case ("/HostInfoMNCT.do"):
			command = new HostInfoNCTMoCommand();
			command.execute(request, response);
			viewPage = "HostInfoMMain.jsp";
			break;

		// 정보 수정 메인페이지에서 키워드 수정 페이지로
		case ("/HostInfoKeyView.do"):
			command = new HostInfoKeySelectCommand();
			command.execute(request, response);
			viewPage = "HostInfoMKeyword.jsp";
			break;

		// 키워드 삭제와 인서트
		case ("/HostInfoKeyInDel.do"):
			command = new HostInfoKeyInDelCommand();
			command.execute(request, response);
			viewPage = "HostInfoMMain.jsp";
			break;

		// 정보 수정 메인페이지에서 키워드 수정 페이지로
		case ("/HostInfoFaciView.do"):
			command = new HostInfoFaSelectCommand();
			command.execute(request, response);
			viewPage = "HostInfoMFacility.jsp";
			break;

		// 키워드 삭제와 인서트
		case ("/HostInfoFaInDel.do"):
			command = new HostInfoFaInDelCommand();
			command.execute(request, response);
			viewPage = "HostInfoMMain.jsp";
			break;

		}// switch End

		RequestDispatcher dispatcher = request.getRequestDispatcher(viewPage);
		dispatcher.forward(request, response);
	}
}// End
